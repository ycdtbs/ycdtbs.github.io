<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Java开发的截图直接上传对象存储</title>
    <link href="/2022/05/24/Java%E5%BC%80%E5%8F%91%E7%9A%84%E6%88%AA%E5%9B%BE%E7%9B%B4%E6%8E%A5%E4%B8%8A%E4%BC%A0%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/"/>
    <url>/2022/05/24/Java%E5%BC%80%E5%8F%91%E7%9A%84%E6%88%AA%E5%9B%BE%E7%9B%B4%E6%8E%A5%E4%B8%8A%E4%BC%A0%E5%AF%B9%E8%B1%A1%E5%AD%98%E5%82%A8/</url>
    
    <content type="html"><![CDATA[<h4 id="Java截图工具直接上传到阿里云对象存储"><a href="#Java截图工具直接上传到阿里云对象存储" class="headerlink" title="Java截图工具直接上传到阿里云对象存储"></a>Java截图工具直接上传到阿里云对象存储</h4><p>   经常使用markdown编写博客或者文档的朋友们应该知道，需要上传照片到图床是一个很麻烦的时候，我们需要保存图片，然后上传到图床，然后复制地址放入markdown文件当中，市面上支持直接从剪贴板中插入文件的图床几乎都收费且价格很不划算，因此开发了一个工具，截图后直接上传到阿里云对象存储，并将返回的地址存入剪贴板直接使用。<br>Github：<a href="https://github.com/ycdtbs/imagebed">https://github.com/ycdtbs/imagebed</a></p><h5 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h5><p>对源码不感兴趣的朋友可以直接下载压缩包修改配置文件</p><p><img src="https://facesearch-hoom.oss-cn-hangzhou.aliyuncs.com/face/09c57784-145a-4a9c-a3e5-ec3e13f45e60.jpg"></p><p>修改config中的文件</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yml"><span class="hljs-attr">aliyun:</span><br>  <span class="hljs-attr">endpoint:</span> <span class="hljs-comment"># 阿里云的节点地址</span><br>  <span class="hljs-attr">keyid:</span>  <span class="hljs-comment"># 填写刚刚生成的AccessKey</span><br>  <span class="hljs-attr">keysecret:</span>   <span class="hljs-comment"># 填写刚刚生成的Accesssecret</span><br>  <span class="hljs-attr">bucketname:</span>  <span class="hljs-comment"># bucket名称</span><br>  <span class="hljs-attr">filehost:</span>     <span class="hljs-comment">#bucket下文件夹的路径</span><br></code></pre></td></tr></table></figure><p>点击bat运行软件（需要java环境）</p><p><img src="https://facesearch-hoom.oss-cn-hangzhou.aliyuncs.com/face/aabd700a-55e6-4417-83a2-5e86cbd9a17b.jpg"></p><p><img src="https://facesearch-hoom.oss-cn-hangzhou.aliyuncs.com/face/b09fc7ab-09d6-4047-a5f0-02d7e9e81968.jpg"></p>]]></content>
    
    
    <categories>
      
      <category>小工具</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java GUI编程</tag>
      
      <tag>小工具开发</tag>
      
      <tag>开源</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Java并发编程实战学习笔记（一）</title>
    <link href="/2021/12/21/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/"/>
    <url>/2021/12/21/Java%E5%B9%B6%E5%8F%91%E7%BC%96%E7%A8%8B%E5%AE%9E%E6%88%98%E5%AD%A6%E4%B9%A0%E7%AC%94%E8%AE%B0%EF%BC%88%E4%B8%80%EF%BC%89/</url>
    
    <content type="html"><![CDATA[]]></content>
    
    
    <categories>
      
      <category>学习笔记</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Java并发编程</tag>
      
      <tag>学习笔记</tag>
      
      <tag>多线程</tag>
      
      <tag>并发</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>百度云Api与SpringBoot实现的人脸识别登录功能</title>
    <link href="/2021/09/21/%E7%99%BE%E5%BA%A6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%ABAPI/"/>
    <url>/2021/09/21/%E7%99%BE%E5%BA%A6%E4%BA%BA%E8%84%B8%E8%AF%86%E5%88%ABAPI/</url>
    
    <content type="html"><![CDATA[<h4 id="百度云Api与SpringBoot实现的人脸识别登录功能"><a href="#百度云Api与SpringBoot实现的人脸识别登录功能" class="headerlink" title="百度云Api与SpringBoot实现的人脸识别登录功能"></a>百度云Api与SpringBoot实现的人脸识别登录功能</h4><p><strong>任何问题都可通过bilibli私信我，虽然我很菜，但是很乐意解答</strong><br><a href="https://space.bilibili.com/97483909">bilibli</a><br>项目中非常重要的gettoken的方法中AK与SK需要自己从百度云人脸识别库获取（代码中删去了这部分）</p><h4 id="1、项目简介"><a href="#1、项目简介" class="headerlink" title="1、项目简介"></a>1、项目简介</h4><p>项目中使用了SpringBoot+Thymleaf+百度云的API接口实现的人脸识别功能，其中融合了人脸库的管理功能，实现对人脸的增删改查。<br>对于原生的百度云API文档可以点击下载<br><a href="https://githubpicture.oss-cn-beijing.aliyuncs.com/FACE.pdf">点击下载百度云API官方文档–32M</a><br>项目演示和流程介绍可参考视频<br><a href="https://www.bilibili.com/video/av93519949#reply2469727748">视频演示</a><br><img src="https://githubpicture.oss-cn-beijing.aliyuncs.com/QQ%E6%88%AA%E5%9B%BE20200304214346.png?ynotemdtimestamp=1652771803320" alt="image"><br><img src="https://githubpicture.oss-cn-beijing.aliyuncs.com/QQ%E6%88%AA%E5%9B%BE20200304214430.png?ynotemdtimestamp=1652771803320" alt="image"><br><img src="https://githubpicture.oss-cn-beijing.aliyuncs.com/QQ%E6%88%AA%E5%9B%BE20200304215800.png?ynotemdtimestamp=1652771803320" alt="image"><br><img src="https://githubpicture.oss-cn-beijing.aliyuncs.com/QQ%E6%88%AA%E5%9B%BE20200304214510.png?ynotemdtimestamp=1652771803320" alt="image"></p><h4 id="2、接口方法"><a href="#2、接口方法" class="headerlink" title="2、接口方法"></a>2、接口方法</h4><p>Face包下的的BaiduAiFace类是整个核心功能的接口<br><strong>FaceRegistration</strong> 方法为人脸注册<br><strong>FaceUpdate</strong> 方法为人脸更新<br><strong>FindPersonFaceList</strong> 方法为查询人脸信息<br><strong>FindGroupList</strong> 为查询本组的面部信息<br><strong>DelPersonFace</strong> 为删除人脸<br><strong>FaceSearch</strong> 为查找人脸</p><h4 id="3、接口参数"><a href="#3、接口参数" class="headerlink" title="3、接口参数"></a>3、接口参数</h4><p>对于每个参数的具体含义与提要提供的参数参考百度云官方文档</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br></pre></td><td class="code"><pre><code class="hljs java"><span class="hljs-meta">@Component</span><br><span class="hljs-keyword">public</span> <span class="hljs-keyword">class</span> <span class="hljs-title class_">Setingmodel</span> &#123;<br>    <span class="hljs-keyword">private</span> String imgpath;<br>    <span class="hljs-keyword">private</span> String GroupID;<br>    <span class="hljs-keyword">private</span> String UserID;<br>    <span class="hljs-keyword">private</span> String Quality_Control;<br>    <span class="hljs-keyword">private</span> String Image_Type;<br>    <span class="hljs-keyword">private</span> String Liveness_Control;<br>    <span class="hljs-keyword">private</span> String Userinf;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getUserinf</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> Userinf;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setUserinf</span><span class="hljs-params">(String userinf)</span> &#123;<br>        Userinf = userinf;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-title function_">Setingmodel</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 图片类型</span><br><span class="hljs-comment">         * BASE64:图片的base64值，base64编码后的图片数据，编码后的图片大小不超过2M；</span><br><span class="hljs-comment">         * URL:图片的 URL地址( 可能由于网络等原因导致下载图片时间过长)；</span><br><span class="hljs-comment">         * FACE_TOKEN：人脸图片的唯一标识，调用人脸检测接口时</span><br><span class="hljs-comment">         * 会为每个人脸图片赋予一个唯一的FACE_TOKEN</span><br><span class="hljs-comment">         * 同一张图片多次检测得到的FACE_TOKEN是同一个。</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-built_in">this</span>.Image_Type = <span class="hljs-string">&quot;BASE64&quot;</span>;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 图片质量控制</span><br><span class="hljs-comment">         * NONE: 不进行控制</span><br><span class="hljs-comment">         * LOW:较低的质量要求</span><br><span class="hljs-comment">         * NORMAL: 一般的质量要求</span><br><span class="hljs-comment">         * HIGH: 较高的质量要求</span><br><span class="hljs-comment">         * 默认 NONE</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-built_in">this</span>.Quality_Control = <span class="hljs-string">&quot;NONE&quot;</span>;<br>        <span class="hljs-comment">/**</span><br><span class="hljs-comment">         * 活体检测控制</span><br><span class="hljs-comment">         * NONE: 不进行控制</span><br><span class="hljs-comment">         * LOW:较低的活体要求(高通过率 低攻击拒绝率)</span><br><span class="hljs-comment">         * NORMAL: 一般的活体要求(平衡的攻击拒绝率, 通过率)</span><br><span class="hljs-comment">         * HIGH: 较高的活体要求(高攻击拒绝率 低通过率)</span><br><span class="hljs-comment">         * 默认NONE</span><br><span class="hljs-comment">         */</span><br>        <span class="hljs-built_in">this</span>.Liveness_Control = <span class="hljs-string">&quot;NONE&quot;</span>;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getImgpath</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> imgpath;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setImgpath</span><span class="hljs-params">(String imgpath)</span> &#123;<br>        <span class="hljs-built_in">this</span>.imgpath = imgpath;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getGroupID</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> GroupID;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setGroupID</span><span class="hljs-params">(String groupID)</span> &#123;<br>        GroupID = groupID;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getUserID</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> UserID;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setUserID</span><span class="hljs-params">(String userID)</span> &#123;<br>        UserID = userID;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getQuality_Control</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> Quality_Control;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setQuality_Control</span><span class="hljs-params">(String quality_Control)</span> &#123;<br>        Quality_Control = quality_Control;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getImage_Type</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> Image_Type;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setImage_Type</span><span class="hljs-params">(String image_Type)</span> &#123;<br>        Image_Type = image_Type;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> String <span class="hljs-title function_">getLiveness_Control</span><span class="hljs-params">()</span> &#123;<br>        <span class="hljs-keyword">return</span> Liveness_Control;<br>    &#125;<br><br>    <span class="hljs-keyword">public</span> <span class="hljs-keyword">void</span> <span class="hljs-title function_">setLiveness_Control</span><span class="hljs-params">(String liveness_Control)</span> &#123;<br>        Liveness_Control = liveness_Control;<br>    &#125;<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>项目文档</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Springboot</tag>
      
      <tag>人脸识别</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
